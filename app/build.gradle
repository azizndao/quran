plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id 'kotlinx-serialization'
  alias libs.plugins.ksp
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(11))
  }
}

android {
  namespace 'org.alquran'
  compileSdk 33

  defaultConfig {
    applicationId "org.alquran"
    minSdk 24
    targetSdk 33
    versionCode 1
    versionName "1.0.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables {
      useSupportLibrary true
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.debug
    }
    debug {
      applicationIdSuffix '.debug'
      versionNameSuffix '-DEBUG'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }
  kotlinOptions {
    jvmTarget = '11'
    freeCompilerArgs = freeCompilerArgs + [
        "-opt-in=kotlin.RequiresOptIn",
        // Enable experimental coroutines APIs, including Flow
        "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
        "-opt-in=kotlinx.coroutines.FlowPreview",
        "-opt-in=kotlin.Experimental",
        // Enable experimental kotlinx serialization APIs
        "-opt-in=kotlinx.serialization.ExperimentalSerializationApi",
        "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api",
        "-opt-in=androidx.compose.animation.graphics.ExperimentalAnimationGraphicsApi",
        "-opt-in=androidx.lifecycle.compose.ExperimentalLifecycleComposeApi",
        "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi",
        "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi",
        "-opt-in=androidx.compose.animation.ExperimentalAnimationApi",
        "-opt-in=com.bumptech.glide.integration.compose.ExperimentalGlideComposeApi",
        "-opt-in=androidx.compose.material.ExperimentalMaterialApi",
        "-opt-in=com.google.accompanist.navigation.material.ExperimentalMaterialNavigationApi",
    ]
  }
  buildFeatures {
    compose true
  }
  composeOptions {
    kotlinCompilerExtensionVersion libs.versions.composeCompilerVersion.get().toString()
  }
  packagingOptions {
    resources {
      excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
  }
  kotlin {
    sourceSets {
      main.kotlin.srcDirs += 'build/generated/ksp/main/kotlin'
      test.kotlin.srcDirs += 'build/generated/ksp/test/kotlin'
    }
  }
}

dependencies {

  implementation project(":core:common")
  implementation project(":core:ui")
  implementation project(":core:datastore")
  implementation project(":core:translation")
  implementation project(":core:network")
  implementation project(":core:audio")
  implementation project(':core:verses')
  implementation project(':core:bookmarks')
  implementation project(':feature:quran:pager')
  implementation project(':core:models')

  implementation libs.accompanist.navigation.material

  implementation libs.coil.compose

  implementation libs.kotlinx.serialization

  implementation libs.androidx.work

  implementation libs.koin.android
  implementation libs.koin.compose
  implementation libs.koin.workmanager

  implementation libs.room.ktx
  ksp libs.room.compiler

  implementation libs.androidx.ktx
  implementation libs.lifecycle.runtime.ktx
  implementation libs.lifecycle.runtime.compose
  implementation libs.activity.compose
  testImplementation libs.junit
}